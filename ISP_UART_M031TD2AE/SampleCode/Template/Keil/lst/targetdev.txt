; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\targetdev.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\targetdev.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -I.\RTE\_Template -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Nuvoton\NuMicro_DFP\1.3.18\Device\M031\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -D_RTE_ --omf_browse=.\obj\targetdev.crf ..\targetdev.c]
                          THUMB

                          AREA ||i.GetApromSize||, CODE, READONLY, ALIGN=1

                  GetApromSize PROC
;;;13     
;;;14     uint32_t GetApromSize()
000000  b538              PUSH     {r3-r5,lr}
;;;15     {
;;;16         uint32_t size = 0x4000, data;
000002  2401              MOVS     r4,#1
000004  03a4              LSLS     r4,r4,#14
                  |L1.6|
;;;17         int result;
;;;18     
;;;19         do
;;;20         {
;;;21             result = FMC_Read_User(size, &data);
000006  466b              MOV      r3,sp
000008  1d22              ADDS     r2,r4,#4
00000a  4621              MOV      r1,r4
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       FMC_Proc
;;;22     
;;;23             if (result < 0)
000012  2800              CMP      r0,#0
000014  da01              BGE      |L1.26|
;;;24             {
;;;25                 return (size);
000016  4620              MOV      r0,r4
;;;26             }
;;;27             else
;;;28             {
;;;29                 size *= 2;
;;;30             }
;;;31         }
;;;32         while (1);
;;;33     }
000018  bd38              POP      {r3-r5,pc}
                  |L1.26|
00001a  0064              LSLS     r4,r4,#1              ;29
00001c  e7f3              B        |L1.6|
;;;34     
                          ENDP


                          AREA ||i.GetDataFlashInfo||, CODE, READONLY, ALIGN=2

                  GetDataFlashInfo PROC
;;;34     
;;;35     void GetDataFlashInfo(uint32_t *addr, uint32_t *size)
000000  b5f8              PUSH     {r3-r7,lr}
;;;36     {
;;;37         uint32_t uData;
;;;38         *size = 0;
000002  2700              MOVS     r7,#0
;;;39         FMC_Read_User(Config0, &uData);
000004  4a14              LDR      r2,|L2.88|
000006  460c              MOV      r4,r1                 ;36
000008  4605              MOV      r5,r0                 ;36
00000a  600f              STR      r7,[r1,#0]
00000c  466b              MOV      r3,sp
00000e  1f11              SUBS     r1,r2,#4
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       FMC_Proc
;;;40     
;;;41         if ((uData & 0x01) == 0)   /*DFEN enable*/
000016  9800              LDR      r0,[sp,#0]
;;;42         {
;;;43             FMC_Read_User(Config1, &uData);
;;;44             /* filter the reserved bits in CONFIG1 */
;;;45             uData &= 0x000FFFFF;
;;;46     
;;;47             if (uData > g_apromSize || (uData & (FMC_FLASH_PAGE_SIZE - 1)))   /*avoid config1 value from error */
000018  4e10              LDR      r6,|L2.92|
00001a  07c0              LSLS     r0,r0,#31             ;41
00001c  d003              BEQ      |L2.38|
;;;48             {
;;;49                 uData = g_apromSize;
;;;50             }
;;;51     
;;;52             *addr = uData;
;;;53             *size = g_apromSize - uData;
;;;54         }
;;;55         else
;;;56         {
;;;57             *addr = g_apromSize;
00001e  6830              LDR      r0,[r6,#0]  ; g_apromSize
;;;58             *size = 0;
000020  6028              STR      r0,[r5,#0]
000022  6027              STR      r7,[r4,#0]
;;;59         }
;;;60     }
000024  bdf8              POP      {r3-r7,pc}
                  |L2.38|
000026  4a0c              LDR      r2,|L2.88|
000028  466b              MOV      r3,sp                 ;43
00002a  1d12              ADDS     r2,r2,#4              ;43
00002c  1f11              SUBS     r1,r2,#4              ;43
00002e  2000              MOVS     r0,#0                 ;43
000030  f7fffffe          BL       FMC_Proc
000034  9800              LDR      r0,[sp,#0]            ;45
000036  0302              LSLS     r2,r0,#12             ;45
000038  0b12              LSRS     r2,r2,#12             ;45
00003a  9200              STR      r2,[sp,#0]            ;47
00003c  6830              LDR      r0,[r6,#0]            ;47  ; g_apromSize
00003e  4282              CMP      r2,r0                 ;47
000040  d801              BHI      |L2.70|
000042  05d1              LSLS     r1,r2,#23             ;47
000044  d006              BEQ      |L2.84|
                  |L2.70|
000046  9000              STR      r0,[sp,#0]            ;49
                  |L2.72|
000048  6028              STR      r0,[r5,#0]            ;53
00004a  6830              LDR      r0,[r6,#0]            ;53  ; g_apromSize
00004c  9900              LDR      r1,[sp,#0]            ;53
00004e  1a40              SUBS     r0,r0,r1              ;53
000050  6020              STR      r0,[r4,#0]            ;53
000052  bdf8              POP      {r3-r7,pc}
                  |L2.84|
000054  4610              MOV      r0,r2                 ;52
000056  e7f7              B        |L2.72|
;;;61     
                          ENDP

                  |L2.88|
                          DCD      0x00300004
                  |L2.92|
                          DCD      g_apromSize

;*** Start embedded assembler ***

#line 1 "..\\targetdev.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_targetdev_c_11f79a65____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REVSH|
#line 402
|__asm___11_targetdev_c_11f79a65____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
