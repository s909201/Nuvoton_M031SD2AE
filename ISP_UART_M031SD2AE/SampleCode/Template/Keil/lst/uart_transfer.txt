; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\uart_transfer.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\uart_transfer.d --cpu=Cortex-M0 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -I.\RTE\_Template -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Nuvoton\NuMicro_DFP\1.3.18\Device\M031\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -D_RTE_ --omf_browse=.\obj\uart_transfer.crf ..\uart_transfer.c]
                          THUMB

                          AREA ||i.PutString||, CODE, READONLY, ALIGN=2

                  PutString PROC
;;;62     
;;;63     void PutString(void)
000000  4905              LDR      r1,|L1.24|
;;;64     {
;;;65         uint32_t i;
;;;66     
;;;67         for (i = 0; i < MAX_PKT_SIZE; i++)
;;;68         {
;;;69             while ((UART0->FIFOSTS & UART_FIFOSTS_TXFULL_Msk));
;;;70     
;;;71             UART0->DAT = response_buff[i];
000002  4a06              LDR      r2,|L1.28|
000004  2000              MOVS     r0,#0                 ;67
                  |L1.6|
000006  698b              LDR      r3,[r1,#0x18]         ;69
000008  021b              LSLS     r3,r3,#8              ;69
00000a  d4fc              BMI      |L1.6|
00000c  5c13              LDRB     r3,[r2,r0]
00000e  600b              STR      r3,[r1,#0]
000010  1c40              ADDS     r0,r0,#1
000012  2840              CMP      r0,#0x40              ;67
000014  d3f7              BCC      |L1.6|
;;;72         }
;;;73     }
000016  4770              BX       lr
;;;74     
                          ENDP

                  |L1.24|
                          DCD      0x40070000
                  |L1.28|
                          DCD      response_buff

                          AREA ||i.UART02_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART02_IRQHandler PROC
;;;32     /*---------------------------------------------------------------------------------------------------------*/
;;;33     void UART02_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;34     {
;;;35         /*----- Determine interrupt source -----*/
;;;36         uint32_t u32IntSrc = UART0->INTSTS;
000002  490f              LDR      r1,|L2.64|
000004  69cb              LDR      r3,[r1,#0x1c]
;;;37     
;;;38         if (u32IntSrc & 0x11)   /*RDA FIFO interrupt & RDA timeout interrupt*/
000006  2011              MOVS     r0,#0x11
000008  4203              TST      r3,r0
;;;39         {
;;;40             while (((UART0->FIFOSTS & UART_FIFOSTS_RXEMPTY_Msk) == 0) && (bufhead < MAX_PKT_SIZE))      /*RX fifo not empty*/
;;;41             {
;;;42                 uart_rcvbuf[bufhead++] = UART0->DAT;
00000a  480e              LDR      r0,|L2.68|
00000c  d00d              BEQ      |L2.42|
00000e  4c0e              LDR      r4,|L2.72|
                  |L2.16|
000010  698a              LDR      r2,[r1,#0x18]         ;40
000012  0452              LSLS     r2,r2,#17             ;40
000014  d409              BMI      |L2.42|
000016  7842              LDRB     r2,[r0,#1]            ;40  ; bufhead
000018  2a40              CMP      r2,#0x40              ;40
00001a  d206              BCS      |L2.42|
00001c  680d              LDR      r5,[r1,#0]
00001e  7842              LDRB     r2,[r0,#1]  ; bufhead
000020  18a6              ADDS     r6,r4,r2
000022  1c52              ADDS     r2,r2,#1
000024  7042              STRB     r2,[r0,#1]
000026  7035              STRB     r5,[r6,#0]
000028  e7f2              B        |L2.16|
                  |L2.42|
;;;43             }
;;;44         }
;;;45     
;;;46         if (bufhead == MAX_PKT_SIZE)
00002a  7842              LDRB     r2,[r0,#1]  ; bufhead
00002c  2100              MOVS     r1,#0
00002e  2a40              CMP      r2,#0x40
000030  d003              BEQ      |L2.58|
;;;47         {
;;;48             bUartDataReady = TRUE;
;;;49             bufhead = 0;
;;;50         }
;;;51         else if (u32IntSrc & 0x10)
000032  06da              LSLS     r2,r3,#27
000034  d500              BPL      |L2.56|
                  |L2.54|
;;;52         {
;;;53             bufhead = 0;
000036  7041              STRB     r1,[r0,#1]
                  |L2.56|
;;;54         }
;;;55     }
000038  bd70              POP      {r4-r6,pc}
                  |L2.58|
00003a  2201              MOVS     r2,#1                 ;48
00003c  7002              STRB     r2,[r0,#0]            ;48
00003e  e7fa              B        |L2.54|
;;;56     #ifdef __ICCARM__
                          ENDP

                  |L2.64|
                          DCD      0x40070000
                  |L2.68|
                          DCD      ||.data||
                  |L2.72|
                          DCD      ||.bss||

                          AREA ||i.UART_Init||, CODE, READONLY, ALIGN=2

                  UART_Init PROC
;;;74     
;;;75     void UART_Init()
000000  480e              LDR      r0,|L3.60|
;;;76     {
;;;77         /*---------------------------------------------------------------------------------------------------------*/
;;;78         /* Init UART                                                                                               */
;;;79         /*---------------------------------------------------------------------------------------------------------*/
;;;80         /* Select UART function mode */
;;;81         UART0->FUNCSEL = ((UART0->FUNCSEL & (~UART_FUNCSEL_FUNCSEL_Msk)) | UART_FUNCSEL_MODE);
000002  6b01              LDR      r1,[r0,#0x30]
000004  08c9              LSRS     r1,r1,#3
000006  00c9              LSLS     r1,r1,#3
000008  6301              STR      r1,[r0,#0x30]
;;;82         /* Set UART line configuration */
;;;83         UART0->LINE = UART_WORD_LEN_8 | UART_PARITY_NONE | UART_STOP_BIT_1;
00000a  2103              MOVS     r1,#3
00000c  60c1              STR      r1,[r0,#0xc]
;;;84         /* Set UART Rx and RTS trigger level */
;;;85         UART0->FIFO = UART_FIFO_RFITL_14BYTES | UART_FIFO_RTSTRGLV_14BYTES;
00000e  490c              LDR      r1,|L3.64|
000010  6081              STR      r1,[r0,#8]
;;;86         /* Set UART baud rate */
;;;87         UART0->BAUD = (UART_BAUD_MODE2 | UART_BAUD_MODE2_DIVIDER(__HIRC, 115200));
000012  490c              LDR      r1,|L3.68|
000014  6241              STR      r1,[r0,#0x24]
;;;88         /* Set time-out interrupt comparator */
;;;89         UART0->TOUT = (UART0->TOUT & ~UART_TOUT_TOIC_Msk) | (0x40);
000016  6a01              LDR      r1,[r0,#0x20]
000018  0a09              LSRS     r1,r1,#8
00001a  0209              LSLS     r1,r1,#8
00001c  3140              ADDS     r1,r1,#0x40
00001e  6201              STR      r1,[r0,#0x20]
000020  4909              LDR      r1,|L3.72|
000022  680a              LDR      r2,[r1,#0]
000024  2380              MOVS     r3,#0x80
000026  0a12              LSRS     r2,r2,#8
000028  0212              LSLS     r2,r2,#8
00002a  431a              ORRS     r2,r2,r3
00002c  600a              STR      r2,[r1,#0]
00002e  4a07              LDR      r2,|L3.76|
000030  0159              LSLS     r1,r3,#5
000032  6011              STR      r1,[r2,#0]
;;;90         NVIC_SetPriority(UART02_IRQn, 2);
;;;91         NVIC_EnableIRQ(UART02_IRQn);
;;;92         /* 0x0811 */
;;;93         UART0->INTEN = (UART_INTEN_TOCNTEN_Msk | UART_INTEN_RXTOIEN_Msk | UART_INTEN_RDAIEN_Msk);
000034  4906              LDR      r1,|L3.80|
000036  6041              STR      r1,[r0,#4]
;;;94     }
000038  4770              BX       lr
;;;95     
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
                          DCD      0x40070000
                  |L3.64|
                          DCD      0x00030030
                  |L3.68|
                          DCD      0x3000019f
                  |L3.72|
                          DCD      0xe000e40c
                  |L3.76|
                          DCD      0xe000e100
                  |L3.80|
                          DCD      0x00000811

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  uart_rcvbuf
                          %        64

                          AREA ||.data||, DATA, ALIGN=0

                  bUartDataReady
000000  00                DCB      0x00
                  bufhead
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\uart_transfer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_uart_transfer_c_92e3c5f3____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_uart_transfer_c_92e3c5f3____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_uart_transfer_c_92e3c5f3____REVSH|
#line 402
|__asm___15_uart_transfer_c_92e3c5f3____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
