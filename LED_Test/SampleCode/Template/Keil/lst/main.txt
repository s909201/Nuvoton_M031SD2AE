; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -I.\RTE\_Template -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Nuvoton\NuMicro_DFP\1.3.18\Device\M031\Include -D__MICROLIB -D__UVISION_VERSION=535 -D_RTE_ -D_RTE_ --omf_browse=.\obj\main.crf ..\main.c]
                          THUMB

                          AREA ||i.SYS_Init||, CODE, READONLY, ALIGN=2

                  SYS_Init PROC
;;;13     
;;;14     void SYS_Init(void)
000000  b570              PUSH     {r4-r6,lr}
000002  2059              MOVS     r0,#0x59
000004  4c15              LDR      r4,|L1.92|
000006  2216              MOVS     r2,#0x16
000008  2188              MOVS     r1,#0x88
                  |L1.10|
00000a  6020              STR      r0,[r4,#0]
00000c  6022              STR      r2,[r4,#0]
00000e  6021              STR      r1,[r4,#0]
000010  6823              LDR      r3,[r4,#0]
000012  2b00              CMP      r3,#0
000014  d0f9              BEQ      |L1.10|
;;;15     {
;;;16         /* Unlock protected registers */
;;;17         SYS_UnlockReg();
;;;18     
;;;19         /* Enable HIRC clock (Internal RC 48MHz) */
;;;20         CLK_EnableXtalRC(CLK_PWRCTL_HIRCEN_Msk);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       CLK_EnableXtalRC
;;;21     
;;;22         /* Wait for HIRC clock ready */
;;;23         CLK_WaitClockReady(CLK_STATUS_HIRCSTB_Msk);
00001c  2010              MOVS     r0,#0x10
00001e  f7fffffe          BL       CLK_WaitClockReady
;;;24     
;;;25         /* Select HCLK clock source as HIRC and HCLK source divider as 1 */
;;;26         CLK_SetHCLK(CLK_CLKSEL0_HCLKSEL_HIRC, CLK_CLKDIV0_HCLK(1));
000022  2100              MOVS     r1,#0
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       CLK_SetHCLK
;;;27     
;;;28         /* Enable UART0 clock */
;;;29         CLK_EnableModuleClock(UART0_MODULE);
00002a  4d0d              LDR      r5,|L1.96|
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       CLK_EnableModuleClock
;;;30     
;;;31         /* Switch UART0 clock source to HIRC */
;;;32         CLK_SetModuleClock(UART0_MODULE, CLK_CLKSEL1_UART0SEL_HIRC, CLK_CLKDIV0_UART0(1));
000032  2103              MOVS     r1,#3
000034  2200              MOVS     r2,#0
000036  0609              LSLS     r1,r1,#24
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       CLK_SetModuleClock
;;;33     
;;;34         /* Update System Core Clock */
;;;35         SystemCoreClockUpdate();
00003e  f7fffffe          BL       SystemCoreClockUpdate
;;;36     
;;;37         /* Set PB multi-function pins for UART0 RXD=PB.12 and TXD=PB.13 */
;;;38         SYS->GPB_MFPH = (SYS->GPB_MFPH & ~(SYS_GPB_MFPH_PB12MFP_Msk | SYS_GPB_MFPH_PB13MFP_Msk))    |       \
000042  06a8              LSLS     r0,r5,#26
000044  6bc1              LDR      r1,[r0,#0x3c]
000046  22ff              MOVS     r2,#0xff
000048  0412              LSLS     r2,r2,#16
00004a  4391              BICS     r1,r1,r2
00004c  2233              MOVS     r2,#0x33
00004e  0452              LSLS     r2,r2,#17
000050  1889              ADDS     r1,r1,r2
000052  63c1              STR      r1,[r0,#0x3c]
000054  2000              MOVS     r0,#0
000056  6020              STR      r0,[r4,#0]
;;;39                         (SYS_GPB_MFPH_PB12MFP_UART0_RXD | SYS_GPB_MFPH_PB13MFP_UART0_TXD);
;;;40     
;;;41         /* Lock protected registers */
;;;42         SYS_LockReg();
;;;43     }
000058  bd70              POP      {r4-r6,pc}
;;;44     
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x40000100
                  |L1.96|
                          DCD      0x5f803d10

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;52     
;;;53     static void delay_ms(uint16_t nDelay)
000000  b5f0              PUSH     {r4-r7,lr}
000002  490f              LDR      r1,|L2.64|
000004  4b0f              LDR      r3,|L2.68|
000006  6809              LDR      r1,[r1,#0]
;;;54     {
;;;55         uint16_t nIndex;
;;;56         for(nIndex = 0; nIndex < nDelay; nIndex++)
000008  2200              MOVS     r2,#0
00000a  004f              LSLS     r7,r1,#1
00000c  217d              MOVS     r1,#0x7d
00000e  681e              LDR      r6,[r3,#0]
000010  00c9              LSLS     r1,r1,#3
000012  4615              MOV      r5,r2
000014  4c09              LDR      r4,|L2.60|
000016  434e              MULS     r6,r1,r6
000018  e00d              B        |L2.54|
                  |L2.26|
00001a  4639              MOV      r1,r7                 ;54
00001c  6166              STR      r6,[r4,#0x14]         ;54
00001e  61a5              STR      r5,[r4,#0x18]         ;54
000020  2305              MOVS     r3,#5                 ;54
000022  6123              STR      r3,[r4,#0x10]         ;54
;;;57         {
;;;58             CLK_SysTickDelay(1000); // delay one ms
000024  e001              B        |L2.42|
                  |L2.38|
000026  1e49              SUBS     r1,r1,#1
000028  d002              BEQ      |L2.48|
                  |L2.42|
00002a  6923              LDR      r3,[r4,#0x10]
00002c  03db              LSLS     r3,r3,#15
00002e  d5fa              BPL      |L2.38|
                  |L2.48|
000030  6125              STR      r5,[r4,#0x10]
000032  1c52              ADDS     r2,r2,#1
000034  b292              UXTH     r2,r2                 ;56
                  |L2.54|
000036  4282              CMP      r2,r0                 ;56
000038  d3ef              BCC      |L2.26|
;;;59         }
;;;60     }
00003a  bdf0              POP      {r4-r7,pc}
;;;61     
                          ENDP

                  |L2.60|
                          DCD      0xe000e000
                  |L2.64|
                          DCD      SystemCoreClock
                  |L2.68|
                          DCD      CyclesPerUs

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;61     
;;;62     int main()
000000  f7fffffe          BL       SYS_Init
;;;63     {
;;;64         SYS_Init();
;;;65     
;;;66         /* Init UART0 to 115200-8n1 for print message */
;;;67         UART_Open(UART0, 115200);
000004  21e1              MOVS     r1,#0xe1
000006  0249              LSLS     r1,r1,#9
000008  480b              LDR      r0,|L3.56|
00000a  f7fffffe          BL       UART_Open
;;;68     
;;;69         GPIO_SetMode(PB, BIT14, GPIO_MODE_OUTPUT); // Morgan
00000e  2201              MOVS     r2,#1
000010  0391              LSLS     r1,r2,#14
000012  480a              LDR      r0,|L3.60|
000014  f7fffffe          BL       GPIO_SetMode
;;;70     
;;;71         /* Connect UART to PC, and open a terminal tool to receive following message */
;;;72         printf("Hello World\n");
000018  a009              ADR      r0,|L3.64|
00001a  f7fffffe          BL       __2printf
00001e  2600              MOVS     r6,#0
;;;73     
;;;74         /* Got no where to go, just loop forever */
;;;75         while(1)
;;;76         {
;;;77             PB14 = 1;
000020  4d0b              LDR      r5,|L3.80|
000022  2401              MOVS     r4,#1                 ;69
                  |L3.36|
000024  63ac              STR      r4,[r5,#0x38]
;;;78             delay_ms(100);
000026  2064              MOVS     r0,#0x64
000028  f7fffffe          BL       delay_ms
;;;79             PB14 = 0;
00002c  63ae              STR      r6,[r5,#0x38]
;;;80             delay_ms(100);
00002e  2064              MOVS     r0,#0x64
000030  f7fffffe          BL       delay_ms
000034  e7f6              B        |L3.36|
;;;81         }
;;;82     }
;;;83     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x40070000
                  |L3.60|
                          DCD      0x40004040
                  |L3.64|
000040  48656c6c          DCB      "Hello World\n",0
000044  6f20576f
000048  726c640a
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L3.80|
                          DCD      0x40004840

;*** Start embedded assembler ***

#line 1 "..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_SYS_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REVSH|
#line 402
|__asm___6_main_c_SYS_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
